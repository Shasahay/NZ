@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/Scripts/bootstrap.min.js")
<script type="text/javascript">
    $(document).ready(function () {
        //$("#stars-default").rating();
        //$("#stars-green").rating('create', { coloron: 'green', onClick: function () { alert('rating is ' + this.attr('data-rating')); } });
        debugger;
        var options = "{ coloron: 'green', onClick: function () { alert('rating is ' + this.attr('data-rating')); } }";
       var method = method || 'create';
        // This is the easiest way to have default options.
        var settings = $.extend({
            // These are the defaults.
            limit: 5,
            value: 0,
            glyph: "glyphicon-star",
            coloroff: "gray",
            coloron: "gold",
            size: "2.0em",
            cursor: "default",
            onClick: function () { },
            endofarray: "idontmatter"
        }, options);
        var style = "";
        style = style + "font-size:" + settings.size + "; ";
        style = style + "color:" + settings.coloroff + "; ";
        style = style + "cursor:" + settings.cursor + "; ";



        if (method == 'create') {
            //this.html('');	//junk whatever was there

            //initialize the data-rating property
            $.each(function () {
                attr = $("#stars-green").attr('data-rating');
                if (attr === undefined || attr === false) { $("#stars-green").attr('data-rating', settings.value); }
            })

            //bolt in the glyphs
            for (var i = 0; i < settings.limit; i++) {
                $("#stars-green").append('<span data-value="' + (i + 1) + '" class="ratingicon glyphicon ' + settings.glyph + '" style="' + style + '" aria-hidden="true"></span>');
            }

            //paint


            paint($("#stars-green").find("span.ratingicon").parent());
            //$.each(function () {
            //    debugger;

            //    var v = $("#stars-green").find("span.ratingicon")
            //    paint((v).parent());
            //    //paint($(this));
            //});

        }
        if (method == 'set') {
            $("#stars-green").attr('data-rating', options);
            $.each(function () { paint($("#stars-green")); });
        }
        if (method == 'get') {
            return this.attr('data-rating');
        }
        //register the click events  working code; uncomment if you want to edit rating on run time.
        //$("#stars-green").find("span.ratingicon").click(function () {
        //    rating = $(this).attr('data-value')
        //    $(this).parent().attr('data-rating', rating);
        //    paint($(this).parent());
        //    settings.onClick.call($(this).parent());
        //})
        function paint(div) {
            rating = parseInt(div.attr('data-rating'));
            div.find("input").val(rating);	//if there is an input in the div lets set it's value
            div.find("div.ratingicon").each(function () {	//now paint the stars

                var rating = parseInt($(this).parent().attr('data-rating'));
                var value = parseInt($(this).attr('data-value'));
                if (value > rating) { $(this).css('color', settings.coloroff); }
                else { $(this).css('color', settings.coloron); }
            })
        }



    });
    
</script>
<div>
    <div class="container-fluid">
        @*@{string flName = string.Concat(""", @ViewBag.fileName, """);}*@
        @{int rating = @ViewBag.rating;}


        <div id="stars-green" data-rating=@rating></div>

        @*<table>
                <tr>
                    <td>Default stars</td>
                    <td><div id="stars-default"><input type=hidden name"rating" /></div></td>
                </tr>
                <tr>
                    <td>Green stars with a callback and a preset value</td>
                    <td><div id="stars-green" data-rating=@rating></div></td>
                </tr>

            </table>*@



    </div>
</div>